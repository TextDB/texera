name: build

on:
  push:
    branches: 
      - 'ci-enable/**'
  pull_request:
    paths-ignore:
      - 'core/scripts/**'
      - '**/.gitignore'
      - '**.md'
      - '**.csv'
      - '**.txt'
  workflow_dispatch:
  
jobs:
  gui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - name: Checkout Texera
        uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache npm and node_modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            core/new-gui/node_modules
          key: ${{ runner.os }}-node-with-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-with-modules-
      - name: Install dependency with npm install
        run: npm --prefix core/new-gui install --progress=false
      - name: Backup - Install dependency with npm ci
        if: ${{ failure() }}
        run: npm --prefix core/new-gui ci --progress=false
      - name: Build with npm
        run: npm run --prefix core/new-gui build --prod --progress=false
      - name: Run frontend unit tests
        run: npm run --prefix core/new-gui test:ci

  amber:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Texera
        uses: actions/checkout@v2
      - name: Lint with scalafmt
        run: cd core/amber && sbt scalafmtCheckAll
      - name: Compile with sbt
        run: cd core/amber && sbt clean compile
      - name: Run backend tests
        run: cd core/amber && sbt test

  python_udf:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - name: Cancel Previous Runs  # add cancel here since this stage is the fastest one.
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          all_but_latest: true
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f core/amber/requirements.txt ]; then pip install -r core/amber/requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 core/amber/src/main/python --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 core/amber/src/main/python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd core/amber/src/main/python && pytest -sv
